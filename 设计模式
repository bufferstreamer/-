# 设计原则

## 开闭原则

![image-20220323215107342](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220323215107342.png)

![image-20220323215123023](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220323215123023.png)



## 里氏代换原则

![image-20220323220456272](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220323220456272.png)

## 依赖倒转原则

![image-20220323220845357](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220323220845357.png)

## 接口隔离原则

![image-20220323222216952](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220323222216952.png)

![image-20220323222306062](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220323222306062.png)

## 迪米特法则

![image-20220323221756838](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220323221756838.png)

## 合成复用原则

![image-20220323222052741](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220323222052741.png)

# 工厂模式

本质：实例化对象不使用new，用工厂方法代替

## 简单工厂

在工厂类里面实现new对象，通知完成初始化对象的属性等，但是需要给工厂增加新的产品的时候，需要修改工厂的代码。所以不满足开闭原则![image-20211115162714358](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20211115162714358.png)

## 工厂方法模式

在工厂类与消费者之间再加一层，即抽象一个车工厂的接口，对应的车型工厂实现车工厂接口，此时增加新的产品不需要改动原来的代码，只需要创建一个对应的产品的工厂去实现车工厂即可。

但是相应的代码结构会变得更复杂

![image-20211115163438243](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20211115163438243.png)

## 抽象工厂模式

创建工厂的工厂

# 代理模式

![image-20220326135008559](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326135008559.png)

![image-20220326135135288](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326135135288.png)

## 静态代理

![image-20220326141845653](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326141845653.png)

## 动态代理

### jdk动态代理

![image-20220326142208240](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326142208240.png)

![image-20220326143405657](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326143405657.png)

![](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326143932488.png)

![image-20220326144021133](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326144021133.png)

![image-20220326141725875](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326141725875.png)

### CGLIB代理

![image-20220326144729307](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326144729307.png)

![image-20220326145358009](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326145358009.png)

enhance的回调函数执行的是methodInterceptor方法拦截器中的方法 实现原方法的增强

## 对比

![image-20220326150045089](C:\Users\刘怼怼\AppData\Roaming\Typora\typora-user-images\image-20220326150045089.png)

